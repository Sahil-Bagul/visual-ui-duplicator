
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jepeeykyoouhaqhondcq.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImplcGVleWt5b291aGFxaG9uZGNxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc2NDM0MzYsImV4cCI6MjA2MzIxOTQzNn0.bPKhW7rhWrAqnTnZF6DI6R_1eiSJC6YcfvPQNuLFKlU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true,
      storage: localStorage, // Explicitly set storage
      storageKey: 'supabase.auth.token', // Set a specific key for storage
    },
    global: {
      headers: {
        'Content-Type': 'application/json',
      },
    },
    db: {
      schema: 'public',
    },
    // Disable realtime subscriptions if not explicitly used
    realtime: {
      params: {
        eventsPerSecond: 10,
      },
    },
  }
);

// Helper function to handle Supabase errors consistently
export const handleSupabaseError = (error: any, context: string = 'operation') => {
  if (error) {
    console.error(`Supabase error during ${context}:`, error);
    
    // Log specific error codes for debugging
    if (error.code) {
      console.error(`Error code: ${error.code}`);
    }
    
    // Return user-friendly message
    return error.message || `An error occurred during ${context}`;
  }
  return null;
};
